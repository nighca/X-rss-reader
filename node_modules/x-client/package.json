{
  "name": "x-client",
  "version": "1.0.0",
  "description": "Client part of X, in Node.js & browser",
  "main": "index.js",
  "browserify": "browser.js",
  "directories": {
    "test": "test"
  },
  "scripts": {
    "browserify": "browserify browser.js -o dist/X.js",
    "compress": "uglifyjs dist/X.js -o dist/X.min.js",
    "build": "npm run browserify && npm run compress",
    "test": "mocha test/Node.js"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/nighca/X-client"
  },
  "keywords": [
    "X",
    "client",
    "rpc",
    "javascript",
    "model"
  ],
  "author": {
    "name": "nighca@live.cn"
  },
  "license": "Apache",
  "bugs": {
    "url": "https://github.com/nighca/X-client/issues"
  },
  "homepage": "https://github.com/nighca/X-client",
  "dependencies": {
    "dnode": "^1.2.0",
    "shoe": "0.0.15",
    "sockjs-stream": "^1.0.2"
  },
  "devDependencies": {
    "browserify": "^6.3.3",
    "chai": "^1.10.0",
    "mocha": "^2.0.1",
    "uglify-js": "^2.4.15"
  },
  "readme": "X-client\n=\n\nClient part of [X](https://github.com/nighca/X), in Node.js & browser.\n\n[X](https://github.com/nighca/X) is a universal model layer for browser apps based on websocket (realized with[dnode](https://github.com/substack/dnode) & [shoe](https://github.com/substack/shoe)).\n\n### Install\n\n#### in Node.js\n\n\tnpm install x-client\n\n```javascript\nvar X = require('x-client');\n```\n\n#### in browser\n\n\tbower install x-client\n\n```html\n<script type=\"text/javascript\" src=\"../bower_components/x-client/dist/X.js\"></script>\n<script type=\"text/javascript\">\n\tvar X = window.X;\n</script>\n```\n\n### Usage\n\n```javascript\n\nX\n\t.config({ token:'FAKETOKEN1QAZ2WSX3EDC' })\n\t.connect('server.address.with.x.service:port');\n\nvar TestModel = X.model('test');\n\nTestModel.create({\n\tname: 'test1',\n\tcnt: {\n\t\ta: 1\n\t}\n}, function(err, obj){\n\t// null, { ..., _id: '...' }\n});\n\nTestModel.list(function(err, res){\n\t// null, [{ ..., _id: '...' }]\n});\n\nTestModel.on('change', function(info){\n    console.info('changed', info.type, info.data);\n    // { type: 'create', data: [{ ..., _id: '...' }] }\n});\n```\n\n### API\n\n#### X properties\n\n* X.isReady\n\n\t`true` / `false`\n\n\tif X connection is ready\n\n#### X methods\n\n* X.config\n\n\t`[ { token: ... } ]` -> `X`\n\n\tpass in config, token is required\n\n* X.connect\n\n\t`[ 'server.address.with.x.service:port' ]` -> `X`\n\n\tconnect to given server (should be a server with [X](https://github.com/nighca/X) service)\n\n* X.ready\n\n\t`[ handler() ]` -> `X`\n\n\thandler will be executed while X service ready (executed immediately if already ready)\n\n* X.model\n\n\t`[ 'name' ]` -> `model`\n\n\tdefine a model with name\n\n* X.noConflict (only in browser)\n\n\t`[]` -> `X`\n\n\trelinquish control of the `X` variable.\n\n#### model methods\n\nsee [here](https://github.com/nighca/X#model-methods)\n\n### Test\n\n#### in Node.js\n\n\tnpm test\n\n#### in browser\n\nopen `test/browser/index.html` in browser\n\n### Build (dist file for browser)\n\n\tnpm run build",
  "readmeFilename": "README.md",
  "gitHead": "920db9a80bf4415d605f87f45f581c7a693d27c8",
  "_id": "x-client@1.0.0",
  "_shasum": "108a90d6d883a0417bf2d3d57227c96c905cd819",
  "_from": "x-client@*"
}
